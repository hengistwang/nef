/*
 * Nnef_EventExposure
 *
 * NEF Event Exposure Service.   Â© 2022 , 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CollectiveBehaviourFilter : Contains the collective behaviour filter information to be collected from UE.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CollectiveBehaviourFilter {
    #[serde(rename = "type")]
    pub r#type: Box<crate::models::CollectiveBehaviourFilterType>,
    /// Value of the parameter type as in the type attribute.
    #[serde(rename = "value")]
    pub value: String,
    /// Indicates whether request list of UE IDs that fulfill a collective behaviour within the area of interest. This attribute shall set to \"true\" if request the list of UE IDs, otherwise, set to \"false\". May only be present and sets to \"true\" if \"AfEvent\" sets to \"COLLECTIVE_BEHAVIOUR\". 
    #[serde(rename = "listOfUeInd", skip_serializing_if = "Option::is_none")]
    pub list_of_ue_ind: Option<bool>,
}

impl CollectiveBehaviourFilter {
    /// Contains the collective behaviour filter information to be collected from UE.
    pub fn new(r#type: crate::models::CollectiveBehaviourFilterType, value: String) -> CollectiveBehaviourFilter {
        CollectiveBehaviourFilter {
            r#type: Box::new(r#type),
            value,
            list_of_ue_ind: None,
        }
    }
}


