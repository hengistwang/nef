/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SnssaiTaiMapping : List of restricted or unrestricted S-NSSAIs per TAI(s)



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SnssaiTaiMapping {
    #[serde(rename = "reportingArea")]
    pub reporting_area: Box<crate::models::TargetArea>,
    #[serde(rename = "accessTypeList", skip_serializing_if = "Option::is_none")]
    pub access_type_list: Option<Vec<crate::models::AccessType>>,
    #[serde(rename = "supportedSnssaiList", skip_serializing_if = "Option::is_none")]
    pub supported_snssai_list: Option<Vec<crate::models::SupportedSnssai>>,
}

impl SnssaiTaiMapping {
    /// List of restricted or unrestricted S-NSSAIs per TAI(s)
    pub fn new(reporting_area: crate::models::TargetArea) -> SnssaiTaiMapping {
        SnssaiTaiMapping {
            reporting_area: Box::new(reporting_area),
            access_type_list: None,
            supported_snssai_list: None,
        }
    }
}


