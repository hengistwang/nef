/*
 * Nsmf_EventExposure
 *
 * Session Management Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SmNasFromSmf : Represents information on the SM congestion control applied SM NAS messages that SMF sends  to UE for PDU Session. 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SmNasFromSmf {
    #[serde(rename = "smNasType")]
    pub sm_nas_type: String,
    /// string with format 'date-time' as defined in OpenAPI.
    #[serde(rename = "timeStamp")]
    pub time_stamp: String,
    /// indicating a time in seconds.
    #[serde(rename = "backoffTimer")]
    pub backoff_timer: i32,
    #[serde(rename = "appliedSmccType")]
    pub applied_smcc_type: Box<crate::models::AppliedSmccType>,
}

impl SmNasFromSmf {
    /// Represents information on the SM congestion control applied SM NAS messages that SMF sends  to UE for PDU Session. 
    pub fn new(sm_nas_type: String, time_stamp: String, backoff_timer: i32, applied_smcc_type: crate::models::AppliedSmccType) -> SmNasFromSmf {
        SmNasFromSmf {
            sm_nas_type,
            time_stamp,
            backoff_timer,
            applied_smcc_type: Box::new(applied_smcc_type),
        }
    }
}


