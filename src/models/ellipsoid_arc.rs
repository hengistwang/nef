/*
 * Nnef_EventExposure
 *
 * NEF Event Exposure Service.   Â© 2022 , 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EllipsoidArc : Ellipsoid Arc.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EllipsoidArc {
    #[serde(rename = "shape")]
    pub shape: Box<crate::models::SupportedGadShapes>,
    #[serde(rename = "point")]
    pub point: Box<crate::models::GeographicalCoordinates>,
    /// Indicates value of the inner radius.
    #[serde(rename = "innerRadius")]
    pub inner_radius: i32,
    /// Indicates value of uncertainty.
    #[serde(rename = "uncertaintyRadius")]
    pub uncertainty_radius: f32,
    /// Indicates value of angle.
    #[serde(rename = "offsetAngle")]
    pub offset_angle: i32,
    /// Indicates value of angle.
    #[serde(rename = "includedAngle")]
    pub included_angle: i32,
    /// Indicates value of confidence.
    #[serde(rename = "confidence")]
    pub confidence: i32,
}

impl EllipsoidArc {
    /// Ellipsoid Arc.
    pub fn new(shape: crate::models::SupportedGadShapes, point: crate::models::GeographicalCoordinates, inner_radius: i32, uncertainty_radius: f32, offset_angle: i32, included_angle: i32, confidence: i32) -> EllipsoidArc {
        EllipsoidArc {
            shape: Box::new(shape),
            point: Box::new(point),
            inner_radius,
            uncertainty_radius,
            offset_angle,
            included_angle,
            confidence,
        }
    }
}


