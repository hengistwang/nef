/*
 * Nnef_EventExposure
 *
 * NEF Event Exposure Service.   Â© 2022 , 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IpPacketFilterSet {
    #[serde(rename = "srcIp", skip_serializing_if = "Option::is_none")]
    pub src_ip: Option<String>,
    #[serde(rename = "dstIp", skip_serializing_if = "Option::is_none")]
    pub dst_ip: Option<String>,
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<i32>,
    #[serde(rename = "srcPort", skip_serializing_if = "Option::is_none")]
    pub src_port: Option<i32>,
    #[serde(rename = "dstPort", skip_serializing_if = "Option::is_none")]
    pub dst_port: Option<i32>,
    #[serde(rename = "toSTc", skip_serializing_if = "Option::is_none")]
    pub to_stc: Option<String>,
    #[serde(rename = "flowLabel", skip_serializing_if = "Option::is_none")]
    pub flow_label: Option<i32>,
    #[serde(rename = "spi", skip_serializing_if = "Option::is_none")]
    pub spi: Option<i32>,
    #[serde(rename = "direction")]
    pub direction: String,
}

impl IpPacketFilterSet {
    pub fn new(direction: String) -> IpPacketFilterSet {
        IpPacketFilterSet {
            src_ip: None,
            dst_ip: None,
            protocol: None,
            src_port: None,
            dst_port: None,
            to_stc: None,
            flow_label: None,
            spi: None,
            direction,
        }
    }
}


