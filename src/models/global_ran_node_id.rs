/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GlobalRanNodeId : One of the six attributes n3IwfId, gNbIdm, ngeNbId, wagfId, tngfId, eNbId shall be present. 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GlobalRanNodeId {
    #[serde(rename = "plmnId")]
    pub plmn_id: Box<crate::models::PlmnId>,
    /// This represents the identifier of the N3IWF ID as specified in clause 9.3.1.57 of  3GPP TS 38.413 in hexadecimal representation. Each character in the string shall take a value  of \"0\" to \"9\", \"a\" to \"f\" or \"A\" to \"F\" and shall represent 4 bits. The most significant  character representing the 4 most significant bits of the N3IWF ID shall appear first in the  string, and the character representing the 4 least significant bit of the N3IWF ID shall  appear last in the string.  
    #[serde(rename = "n3IwfId", skip_serializing_if = "Option::is_none")]
    pub n3_iwf_id: Option<String>,
    #[serde(rename = "gNbId", skip_serializing_if = "Option::is_none")]
    pub g_nb_id: Option<Box<crate::models::GnbId>>,
    /// This represents the identifier of the ng-eNB ID as specified in clause 9.3.1.8 of  3GPP TS 38.413. The value of the ng-eNB ID shall be encoded in hexadecimal representation.  Each character in the string shall take a value of \"0\" to \"9\", \"a\" to \"f\" or \"A\" to \"F\" and  shall represent 4 bits. The padding 0 shall be added to make multiple nibbles, so the most  significant character representing the padding 0 if required together with the 4 most  significant bits of the ng-eNB ID shall appear first in the string, and the character  representing the 4 least significant bit of the ng-eNB ID (to form a nibble) shall appear last  in the string.  
    #[serde(rename = "ngeNbId", skip_serializing_if = "Option::is_none")]
    pub nge_nb_id: Option<String>,
    /// This represents the identifier of the W-AGF ID as specified in clause 9.3.1.162 of  3GPP TS 38.413 in hexadecimal representation. Each character in the string shall take a value  of \"0\" to \"9\", \"a\" to \"f\" or \"A\" to \"F\" and shall represent 4 bits. The most significant  character representing the 4 most significant bits of the W-AGF ID shall appear first in the  string, and the character representing the 4 least significant bit of the W-AGF ID shall  appear last in the string.  
    #[serde(rename = "wagfId", skip_serializing_if = "Option::is_none")]
    pub wagf_id: Option<String>,
    /// This represents the identifier of the TNGF ID as specified in clause 9.3.1.161 of  3GPP TS 38.413  in hexadecimal representation. Each character in the string shall take a value of \"0\" to \"9\", \"a\"  to \"f\" or \"A\" to \"F\" and shall represent 4 bits. The most significant character representing the  4 most significant bits of the TNGF ID shall appear first in the string, and the character  representing the 4 least significant bit of the TNGF ID shall appear last in the string.  
    #[serde(rename = "tngfId", skip_serializing_if = "Option::is_none")]
    pub tngf_id: Option<String>,
    /// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).  
    #[serde(rename = "nid", skip_serializing_if = "Option::is_none")]
    pub nid: Option<String>,
    /// This represents the identifier of the eNB ID as specified in clause 9.2.1.37 of  3GPP TS 36.413. The string shall be formatted with the following pattern  '^('MacroeNB-[A-Fa-f0-9]{5}|LMacroeNB-[A-Fa-f0-9]{6}|SMacroeNB-[A-Fa-f0-9]{5} |HomeeNB-[A-Fa-f0-9]{7})$'. The value of the eNB ID shall be encoded in hexadecimal representation. Each character in the  string shall take a value of \"0\" to \"9\", \"a\" to \"f\" or \"A\" to \"F\" and shall represent 4 bits.  The padding 0 shall be added to make multiple nibbles, so the most significant character  representing the padding 0 if required together with the 4 most significant bits of the eNB ID  shall appear first in the string, and the character representing the 4 least significant bit  of the eNB ID (to form a nibble) shall appear last in the string. 
    #[serde(rename = "eNbId", skip_serializing_if = "Option::is_none")]
    pub e_nb_id: Option<String>,
}

impl GlobalRanNodeId {
    /// One of the six attributes n3IwfId, gNbIdm, ngeNbId, wagfId, tngfId, eNbId shall be present. 
    pub fn new(plmn_id: crate::models::PlmnId) -> GlobalRanNodeId {
        GlobalRanNodeId {
            plmn_id: Box::new(plmn_id),
            n3_iwf_id: None,
            g_nb_id: None,
            nge_nb_id: None,
            wagf_id: None,
            tngf_id: None,
            nid: None,
            e_nb_id: None,
        }
    }
}


