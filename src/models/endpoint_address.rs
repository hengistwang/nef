/*
 * Nnef_EventExposure
 *
 * NEF Event Exposure Service.   Â© 2022 , 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EndpointAddress {
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
    /// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. 
    #[serde(rename = "ipv4Addr", skip_serializing_if = "Option::is_none")]
    pub ipv4_addr: Option<String>,
    #[serde(rename = "ipv6Addr", skip_serializing_if = "Option::is_none")]
    pub ipv6_addr: Option<Box<crate::models::Ipv6Addr>>,
    /// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer.
    #[serde(rename = "portNumber")]
    pub port_number: i32,
}

impl EndpointAddress {
    pub fn new(port_number: i32) -> EndpointAddress {
        EndpointAddress {
            hostname: None,
            ipv4_addr: None,
            ipv6_addr: None,
            port_number,
        }
    }
}


