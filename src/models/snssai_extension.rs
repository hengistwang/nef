/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SnssaiExtension : Extensions to the Snssai data type, sdRanges and wildcardSd shall not be present simultaneously 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SnssaiExtension {
    /// When present, it shall contain the range(s) of Slice Differentiator values supported for the Slice/Service Type value indicated in the sst attribute of the Snssai data type 
    #[serde(rename = "sdRanges", skip_serializing_if = "Option::is_none")]
    pub sd_ranges: Option<Vec<crate::models::SdRange>>,
    /// When present, it shall be set to true, to indicate that all SD values are supported for the Slice/Service Type value indicated in the sst attribute of the Snssai data type. 
    #[serde(rename = "wildcardSd", skip_serializing_if = "Option::is_none")]
    pub wildcard_sd: Option<bool>,
}

impl SnssaiExtension {
    /// Extensions to the Snssai data type, sdRanges and wildcardSd shall not be present simultaneously 
    pub fn new() -> SnssaiExtension {
        SnssaiExtension {
            sd_ranges: None,
            wildcard_sd: None,
        }
    }
}


