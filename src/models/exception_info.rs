/*
 * Nnef_EventExposure
 *
 * NEF Event Exposure Service.   Â© 2022 , 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ExceptionInfo : Represents the exceptions information provided by the AF.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExceptionInfo {
    #[serde(rename = "ipTrafficFilter", skip_serializing_if = "Option::is_none")]
    pub ip_traffic_filter: Option<Box<crate::models::FlowInfo>>,
    #[serde(rename = "ethTrafficFilter", skip_serializing_if = "Option::is_none")]
    pub eth_traffic_filter: Option<Box<crate::models::EthFlowDescription>>,
    #[serde(rename = "exceps")]
    pub exceps: Vec<crate::models::Exception>,
}

impl ExceptionInfo {
    /// Represents the exceptions information provided by the AF.
    pub fn new(exceps: Vec<crate::models::Exception>) -> ExceptionInfo {
        ExceptionInfo {
            ip_traffic_filter: None,
            eth_traffic_filter: None,
            exceps,
        }
    }
}


